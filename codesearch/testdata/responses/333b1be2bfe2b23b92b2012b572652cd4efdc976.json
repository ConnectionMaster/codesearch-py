{
  "elapsed_ms": 39, 
  "file_info_response": [
    {
      "file_info": {
        "gob_info": {
          "repo": "chromium/chromium/src/out", 
          "commit": "077e308572a1598ab56c234813824b636c37e0c2", 
          "path": "Debug/gen/third_party/blink/public/platform/modules/background_sync/background_sync.mojom-blink.h"
        }, 
        "name": "src/out/Debug/gen/third_party/blink/public/platform/modules/background_sync/background_sync.mojom-blink.h", 
        "language": "c++", 
        "changelist_num": "077e308572a1598ab56c234813824b636c37e0c2", 
        "package_name": "chromium", 
        "lines": "517", 
        "content": {
          "text": "// Copyright 2013 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#ifndef THIRD_PARTY_BLINK_PUBLIC_PLATFORM_MODULES_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_H_\n#define THIRD_PARTY_BLINK_PUBLIC_PLATFORM_MODULES_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_H_\n\n#include <stdint.h>\n\n#include <limits>\n#include <type_traits>\n#include <utility>\n\n#include \"base/callback.h\"\n#include \"base/macros.h\"\n#include \"base/optional.h\"\n\n#include \"mojo/public/cpp/bindings/mojo_buildflags.h\"\n#if BUILDFLAG(MOJO_TRACE_ENABLED)\n#include \"base/trace_event/trace_event.h\"\n#endif\n#include \"mojo/public/cpp/bindings/clone_traits.h\"\n#include \"mojo/public/cpp/bindings/equals_traits.h\"\n#include \"mojo/public/cpp/bindings/lib/serialization.h\"\n#include \"mojo/public/cpp/bindings/struct_ptr.h\"\n#include \"mojo/public/cpp/bindings/struct_traits.h\"\n#include \"mojo/public/cpp/bindings/union_traits.h\"\n#include \"third_party/blink/public/platform/modules/background_sync/background_sync.mojom-shared.h\"\n\n#include \"mojo/public/cpp/bindings/lib/wtf_clone_equals_util.h\"\n#include \"mojo/public/cpp/bindings/lib/wtf_hash_util.h\"\n#include \"third_party/blink/renderer/platform/mojo/revocable_interface_ptr.h\"\n#include \"third_party/blink/renderer/platform/wtf/hash_functions.h\"\n#include \"third_party/blink/renderer/platform/wtf/text/wtf_string.h\"\n\n#include \"mojo/public/cpp/bindings/associated_interface_ptr.h\"\n#include \"mojo/public/cpp/bindings/associated_interface_ptr_info.h\"\n#include \"mojo/public/cpp/bindings/associated_interface_request.h\"\n#include \"mojo/public/cpp/bindings/interface_ptr.h\"\n#include \"mojo/public/cpp/bindings/interface_request.h\"\n#include \"mojo/public/cpp/bindings/lib/control_message_handler.h\"\n#include \"mojo/public/cpp/bindings/raw_ptr_impl_ref_traits.h\"\n#include \"mojo/public/cpp/bindings/thread_safe_interface_ptr.h\"\n#include \"third_party/blink/renderer/platform/mojo/revocable_interface_ptr.h\"\n\n\n#include \"mojo/public/cpp/bindings/lib/native_enum_serialization.h\"\n#include \"mojo/public/cpp/bindings/lib/native_struct_serialization.h\"\n#include \"third_party/blink/public/platform/web_common.h\"\n\n\nnamespace WTF {\nstruct blink_mojom_internal_BackgroundSyncNetworkState_DataHashFn {\n  static unsigned GetHash(const ::blink::mojom::BackgroundSyncNetworkState& value) {\n    using utype = std::underlying_type<::blink::mojom::BackgroundSyncNetworkState>::type;\n    return DefaultHash<utype>::Hash().GetHash(static_cast<utype>(value));\n  }\n  static bool Equal(const ::blink::mojom::BackgroundSyncNetworkState& left, const ::blink::mojom::BackgroundSyncNetworkState& right) {\n    return left == right;\n  }\n  static const bool safe_to_compare_to_empty_or_deleted = true;\n};\n\ntemplate <>\nstruct DefaultHash<::blink::mojom::BackgroundSyncNetworkState> {\n  using Hash = blink_mojom_internal_BackgroundSyncNetworkState_DataHashFn;\n};\n\ntemplate <>\nstruct HashTraits<::blink::mojom::BackgroundSyncNetworkState>\n    : public GenericHashTraits<::blink::mojom::BackgroundSyncNetworkState> {\n  static_assert(true,\n                \"-1000000 is a reserved enum value\");\n  static_assert(true,\n                \"-1000001 is a reserved enum value\");\n  static const bool hasIsEmptyValueFunction = true;\n  static bool IsEmptyValue(const ::blink::mojom::BackgroundSyncNetworkState& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncNetworkState>(-1000000);\n  }\n  static void ConstructDeletedValue(::blink::mojom::BackgroundSyncNetworkState& slot, bool) {\n    slot = static_cast<::blink::mojom::BackgroundSyncNetworkState>(-1000001);\n  }\n  static bool IsDeletedValue(const ::blink::mojom::BackgroundSyncNetworkState& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncNetworkState>(-1000001);\n  }\n};\n}  // namespace WTF\n\n\nnamespace WTF {\nstruct blink_mojom_internal_BackgroundSyncError_DataHashFn {\n  static unsigned GetHash(const ::blink::mojom::BackgroundSyncError& value) {\n    using utype = std::underlying_type<::blink::mojom::BackgroundSyncError>::type;\n    return DefaultHash<utype>::Hash().GetHash(static_cast<utype>(value));\n  }\n  static bool Equal(const ::blink::mojom::BackgroundSyncError& left, const ::blink::mojom::BackgroundSyncError& right) {\n    return left == right;\n  }\n  static const bool safe_to_compare_to_empty_or_deleted = true;\n};\n\ntemplate <>\nstruct DefaultHash<::blink::mojom::BackgroundSyncError> {\n  using Hash = blink_mojom_internal_BackgroundSyncError_DataHashFn;\n};\n\ntemplate <>\nstruct HashTraits<::blink::mojom::BackgroundSyncError>\n    : public GenericHashTraits<::blink::mojom::BackgroundSyncError> {\n  static_assert(true,\n                \"-1000000 is a reserved enum value\");\n  static_assert(true,\n                \"-1000001 is a reserved enum value\");\n  static const bool hasIsEmptyValueFunction = true;\n  static bool IsEmptyValue(const ::blink::mojom::BackgroundSyncError& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncError>(-1000000);\n  }\n  static void ConstructDeletedValue(::blink::mojom::BackgroundSyncError& slot, bool) {\n    slot = static_cast<::blink::mojom::BackgroundSyncError>(-1000001);\n  }\n  static bool IsDeletedValue(const ::blink::mojom::BackgroundSyncError& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncError>(-1000001);\n  }\n};\n}  // namespace WTF\n\n\nnamespace WTF {\nstruct blink_mojom_internal_BackgroundSyncState_DataHashFn {\n  static unsigned GetHash(const ::blink::mojom::BackgroundSyncState& value) {\n    using utype = std::underlying_type<::blink::mojom::BackgroundSyncState>::type;\n    return DefaultHash<utype>::Hash().GetHash(static_cast<utype>(value));\n  }\n  static bool Equal(const ::blink::mojom::BackgroundSyncState& left, const ::blink::mojom::BackgroundSyncState& right) {\n    return left == right;\n  }\n  static const bool safe_to_compare_to_empty_or_deleted = true;\n};\n\ntemplate <>\nstruct DefaultHash<::blink::mojom::BackgroundSyncState> {\n  using Hash = blink_mojom_internal_BackgroundSyncState_DataHashFn;\n};\n\ntemplate <>\nstruct HashTraits<::blink::mojom::BackgroundSyncState>\n    : public GenericHashTraits<::blink::mojom::BackgroundSyncState> {\n  static_assert(true,\n                \"-1000000 is a reserved enum value\");\n  static_assert(true,\n                \"-1000001 is a reserved enum value\");\n  static const bool hasIsEmptyValueFunction = true;\n  static bool IsEmptyValue(const ::blink::mojom::BackgroundSyncState& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncState>(-1000000);\n  }\n  static void ConstructDeletedValue(::blink::mojom::BackgroundSyncState& slot, bool) {\n    slot = static_cast<::blink::mojom::BackgroundSyncState>(-1000001);\n  }\n  static bool IsDeletedValue(const ::blink::mojom::BackgroundSyncState& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncState>(-1000001);\n  }\n};\n}  // namespace WTF\n\n\nnamespace WTF {\nstruct blink_mojom_internal_BackgroundSyncEventLastChance_DataHashFn {\n  static unsigned GetHash(const ::blink::mojom::BackgroundSyncEventLastChance& value) {\n    using utype = std::underlying_type<::blink::mojom::BackgroundSyncEventLastChance>::type;\n    return DefaultHash<utype>::Hash().GetHash(static_cast<utype>(value));\n  }\n  static bool Equal(const ::blink::mojom::BackgroundSyncEventLastChance& left, const ::blink::mojom::BackgroundSyncEventLastChance& right) {\n    return left == right;\n  }\n  static const bool safe_to_compare_to_empty_or_deleted = true;\n};\n\ntemplate <>\nstruct DefaultHash<::blink::mojom::BackgroundSyncEventLastChance> {\n  using Hash = blink_mojom_internal_BackgroundSyncEventLastChance_DataHashFn;\n};\n\ntemplate <>\nstruct HashTraits<::blink::mojom::BackgroundSyncEventLastChance>\n    : public GenericHashTraits<::blink::mojom::BackgroundSyncEventLastChance> {\n  static_assert(true,\n                \"-1000000 is a reserved enum value\");\n  static_assert(true,\n                \"-1000001 is a reserved enum value\");\n  static const bool hasIsEmptyValueFunction = true;\n  static bool IsEmptyValue(const ::blink::mojom::BackgroundSyncEventLastChance& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncEventLastChance>(-1000000);\n  }\n  static void ConstructDeletedValue(::blink::mojom::BackgroundSyncEventLastChance& slot, bool) {\n    slot = static_cast<::blink::mojom::BackgroundSyncEventLastChance>(-1000001);\n  }\n  static bool IsDeletedValue(const ::blink::mojom::BackgroundSyncEventLastChance& value) {\n    return value == static_cast<::blink::mojom::BackgroundSyncEventLastChance>(-1000001);\n  }\n};\n}  // namespace WTF\n\n\nnamespace blink {\nnamespace mojom {\nnamespace blink {\nusing BackgroundSyncNetworkState = BackgroundSyncNetworkState;  // Alias for definition in the parent namespace.\nusing BackgroundSyncError = BackgroundSyncError;  // Alias for definition in the parent namespace.\nusing BackgroundSyncState = BackgroundSyncState;  // Alias for definition in the parent namespace.\nusing BackgroundSyncEventLastChance = BackgroundSyncEventLastChance;  // Alias for definition in the parent namespace.\nclass BackgroundSyncService;\nusing BackgroundSyncServicePtr = mojo::InterfacePtr<BackgroundSyncService>;\nusing RevocableBackgroundSyncServicePtr = ::blink::RevocableInterfacePtr<BackgroundSyncService>;\nusing BackgroundSyncServicePtrInfo = mojo::InterfacePtrInfo<BackgroundSyncService>;\nusing ThreadSafeBackgroundSyncServicePtr =\n    mojo::ThreadSafeInterfacePtr<BackgroundSyncService>;\nusing BackgroundSyncServiceRequest = mojo::InterfaceRequest<BackgroundSyncService>;\nusing BackgroundSyncServiceAssociatedPtr =\n    mojo::AssociatedInterfacePtr<BackgroundSyncService>;\nusing ThreadSafeBackgroundSyncServiceAssociatedPtr =\n    mojo::ThreadSafeAssociatedInterfacePtr<BackgroundSyncService>;\nusing BackgroundSyncServiceAssociatedPtrInfo =\n    mojo::AssociatedInterfacePtrInfo<BackgroundSyncService>;\nusing BackgroundSyncServiceAssociatedRequest =\n    mojo::AssociatedInterfaceRequest<BackgroundSyncService>;\n\nclass SyncRegistration;\nusing SyncRegistrationPtr = mojo::InlinedStructPtr<SyncRegistration>;\n\n\nclass BackgroundSyncServiceProxy;\n\ntemplate <typename ImplRefTraits>\nclass BackgroundSyncServiceStub;\n\nclass BackgroundSyncServiceRequestValidator;\nclass BackgroundSyncServiceResponseValidator;\n\nclass BLINK_PLATFORM_EXPORT BackgroundSyncService\n    : public BackgroundSyncServiceInterfaceBase {\n public:\n  static const char Name_[];\n  static constexpr uint32_t Version_ = 0;\n  static constexpr bool PassesAssociatedKinds_ = false;\n  static constexpr bool HasSyncMethods_ = false;\n\n  using Proxy_ = BackgroundSyncServiceProxy;\n\n  template <typename ImplRefTraits>\n  using Stub_ = BackgroundSyncServiceStub<ImplRefTraits>;\n\n  using RequestValidator_ = BackgroundSyncServiceRequestValidator;\n  using ResponseValidator_ = BackgroundSyncServiceResponseValidator;\n  enum MethodMinVersions : uint32_t {\n    kRegisterMinVersion = 0,\n    kGetRegistrationsMinVersion = 0,\n  };\n  virtual ~BackgroundSyncService() {}\n\n\n  using RegisterCallback = base::OnceCallback<void(BackgroundSyncError, SyncRegistrationPtr)>;\n  virtual void Register(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback) = 0;\n\n\n  using GetRegistrationsCallback = base::OnceCallback<void(BackgroundSyncError, WTF::Vector<SyncRegistrationPtr>)>;\n  virtual void GetRegistrations(int64_t service_worker_registration_id, GetRegistrationsCallback callback) = 0;\n};\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceInterceptorForTesting : public BackgroundSyncService {\n  virtual BackgroundSyncService* GetForwardingInterface() = 0;\n  void Register(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback) override;\n  void GetRegistrations(int64_t service_worker_registration_id, GetRegistrationsCallback callback) override;\n};\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceAsyncWaiter {\n public:\n  explicit BackgroundSyncServiceAsyncWaiter(BackgroundSyncService* proxy);\n  ~BackgroundSyncServiceAsyncWaiter();\n  void Register(\n      SyncRegistrationPtr options, int64_t service_worker_registration_id, BackgroundSyncError* out_err, SyncRegistrationPtr* out_options);\n  void GetRegistrations(\n      int64_t service_worker_registration_id, BackgroundSyncError* out_err, WTF::Vector<SyncRegistrationPtr>* out_registrations);\n\n private:\n  BackgroundSyncService* const proxy_;\n\n  DISALLOW_COPY_AND_ASSIGN(BackgroundSyncServiceAsyncWaiter);\n};\n\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceProxy\n    : public BackgroundSyncService {\n public:\n  explicit BackgroundSyncServiceProxy(mojo::MessageReceiverWithResponder* receiver);\n  void Register(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback) final;\n  void GetRegistrations(int64_t service_worker_registration_id, GetRegistrationsCallback callback) final;\n\n private:\n  mojo::MessageReceiverWithResponder* receiver_;\n};\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceStubDispatch {\n public:\n  static bool Accept(BackgroundSyncService* impl, mojo::Message* message);\n  static bool AcceptWithResponder(\n      BackgroundSyncService* impl,\n      mojo::Message* message,\n      std::unique_ptr<mojo::MessageReceiverWithStatus> responder);\n};\n\ntemplate <typename ImplRefTraits =\n              mojo::RawPtrImplRefTraits<BackgroundSyncService>>\nclass BackgroundSyncServiceStub\n    : public mojo::MessageReceiverWithResponderStatus {\n public:\n  using ImplPointerType = typename ImplRefTraits::PointerType;\n\n  BackgroundSyncServiceStub() {}\n  ~BackgroundSyncServiceStub() override {}\n\n  void set_sink(ImplPointerType sink) { sink_ = std::move(sink); }\n  ImplPointerType& sink() { return sink_; }\n\n  bool Accept(mojo::Message* message) override {\n    if (ImplRefTraits::IsNull(sink_))\n      return false;\n    return BackgroundSyncServiceStubDispatch::Accept(\n        ImplRefTraits::GetRawPointer(&sink_), message);\n  }\n\n  bool AcceptWithResponder(\n      mojo::Message* message,\n      std::unique_ptr<mojo::MessageReceiverWithStatus> responder) override {\n    if (ImplRefTraits::IsNull(sink_))\n      return false;\n    return BackgroundSyncServiceStubDispatch::AcceptWithResponder(\n        ImplRefTraits::GetRawPointer(&sink_), message, std::move(responder));\n  }\n\n private:\n  ImplPointerType sink_;\n};\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceRequestValidator : public mojo::MessageReceiver {\n public:\n  bool Accept(mojo::Message* message) override;\n};\nclass BLINK_PLATFORM_EXPORT BackgroundSyncServiceResponseValidator : public mojo::MessageReceiver {\n public:\n  bool Accept(mojo::Message* message) override;\n};\n\n\nclass BLINK_PLATFORM_EXPORT SyncRegistration {\n public:\n  using DataView = SyncRegistrationDataView;\n  using Data_ = internal::SyncRegistration_Data;\n\n  template <typename... Args>\n  static SyncRegistrationPtr New(Args&&... args) {\n    return SyncRegistrationPtr(\n        base::in_place, std::forward<Args>(args)...);\n  }\n\n  template <typename U>\n  static SyncRegistrationPtr From(const U& u) {\n    return mojo::TypeConverter<SyncRegistrationPtr, U>::Convert(u);\n  }\n\n  template <typename U>\n  U To() const {\n    return mojo::TypeConverter<U, SyncRegistration>::Convert(*this);\n  }\n\n\n  SyncRegistration();\n\n  SyncRegistration(\n      int64_t id,\n      const WTF::String& tag,\n      BackgroundSyncNetworkState network_state);\n\n  ~SyncRegistration();\n\n  // Clone() is a template so it is only instantiated if it is used. Thus, the\n  // bindings generator does not need to know whether Clone() or copy\n  // constructor/assignment are available for members.\n  template <typename StructPtrType = SyncRegistrationPtr>\n  SyncRegistrationPtr Clone() const;\n\n  // Equals() is a template so it is only instantiated if it is used. Thus, the\n  // bindings generator does not need to know whether Equals() or == operator\n  // are available for members.\n  template <typename T,\n            typename std::enable_if<std::is_same<\n                T, SyncRegistration>::value>::type* = nullptr>\n  bool Equals(const T& other) const;\n  size_t Hash(size_t seed) const;\n\n  template <typename UserType>\n  static WTF::Vector<uint8_t> Serialize(UserType* input) {\n    return mojo::internal::SerializeImpl<\n        SyncRegistration::DataView, WTF::Vector<uint8_t>>(input);\n  }\n\n  template <typename UserType>\n  static mojo::Message SerializeAsMessage(UserType* input) {\n    return mojo::internal::SerializeAsMessageImpl<\n        SyncRegistration::DataView>(input);\n  }\n\n  // The returned Message is serialized only if the message is moved\n  // cross-process or cross-language. Otherwise if the message is Deserialized\n  // as the same UserType |input| will just be moved to |output| in\n  // DeserializeFromMessage.\n  template <typename UserType>\n  static mojo::Message WrapAsMessage(UserType input) {\n    return mojo::Message(std::make_unique<\n        internal::SyncRegistration_UnserializedMessageContext<\n            UserType, SyncRegistration::DataView>>(0, 0, std::move(input)));\n  }\n\n  template <typename UserType>\n  static bool Deserialize(const void* data,\n                          size_t data_num_bytes,\n                          UserType* output) {\n    return mojo::internal::DeserializeImpl<SyncRegistration::DataView>(\n        data, data_num_bytes, std::vector<mojo::ScopedHandle>(), output, Validate);\n  }\n\n  template <typename UserType>\n  static bool Deserialize(const WTF::Vector<uint8_t>& input,\n                          UserType* output) {\n    return SyncRegistration::Deserialize(\n        input.size() == 0 ? nullptr : &input.front(), input.size(), output);\n  }\n\n  template <typename UserType>\n  static bool DeserializeFromMessage(mojo::Message input,\n                                     UserType* output) {\n    auto context = input.TakeUnserializedContext<\n        internal::SyncRegistration_UnserializedMessageContext<\n            UserType, SyncRegistration::DataView>>();\n    if (context) {\n      *output = std::move(context->TakeData());\n      return true;\n    }\n    input.SerializeIfNecessary();\n    return mojo::internal::DeserializeImpl<SyncRegistration::DataView>(\n        input.payload(), input.payload_num_bytes(),\n        std::move(*input.mutable_handles()), output, Validate);\n  }\n\n  int64_t id;\n  WTF::String tag;\n  BackgroundSyncNetworkState network_state;\n\n private:\n  static bool Validate(const void* data,\n                       mojo::internal::ValidationContext* validation_context);\n};\n\n\n\n\ntemplate <typename StructPtrType>\nSyncRegistrationPtr SyncRegistration::Clone() const {\n  return New(\n      mojo::Clone(id),\n      mojo::Clone(tag),\n      mojo::Clone(network_state)\n  );\n}\n\ntemplate <typename T,\n          typename std::enable_if<std::is_same<\n              T, SyncRegistration>::value>::type*>\nbool SyncRegistration::Equals(const T& other_struct) const {\n  if (!mojo::Equals(this->id, other_struct.id))\n    return false;\n  if (!mojo::Equals(this->tag, other_struct.tag))\n    return false;\n  if (!mojo::Equals(this->network_state, other_struct.network_state))\n    return false;\n  return true;\n}\n\n\n}  // namespace blink\n}  // namespace mojom\n}  // namespace blink\n\nnamespace mojo {\n\n\ntemplate <>\nstruct BLINK_PLATFORM_EXPORT StructTraits<::blink::mojom::blink::SyncRegistration::DataView,\n                                         ::blink::mojom::blink::SyncRegistrationPtr> {\n  static bool IsNull(const ::blink::mojom::blink::SyncRegistrationPtr& input) { return !input; }\n  static void SetToNull(::blink::mojom::blink::SyncRegistrationPtr* output) { output->reset(); }\n\n  static decltype(::blink::mojom::blink::SyncRegistration::id) id(\n      const ::blink::mojom::blink::SyncRegistrationPtr& input) {\n    return input->id;\n  }\n\n  static const decltype(::blink::mojom::blink::SyncRegistration::tag)& tag(\n      const ::blink::mojom::blink::SyncRegistrationPtr& input) {\n    return input->tag;\n  }\n\n  static decltype(::blink::mojom::blink::SyncRegistration::network_state) network_state(\n      const ::blink::mojom::blink::SyncRegistrationPtr& input) {\n    return input->network_state;\n  }\n\n  static bool Read(::blink::mojom::blink::SyncRegistration::DataView input, ::blink::mojom::blink::SyncRegistrationPtr* output);\n};\n\n}  // namespace mojo\n\n#endif  // THIRD_PARTY_BLINK_PUBLIC_PLATFORM_MODULES_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_H_"
        }, 
        "generated": true, 
        "mime_type": "text/plain", 
        "size": "20262", 
        "type": 1, 
        "md5": "4d41a61b4cdb7f9f2b56ddeda764c6f1", 
        "codeblock": [
          {
            "type": 40, 
            "name": "THIRD_PARTY_BLINK_PUBLIC_PLATFORM_MODULES_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_H_", 
            "text_range": {
              "start_line": 6, 
              "end_line": 7, 
              "start_column": 1, 
              "end_column": 1
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "blink_mojom_internal_BackgroundSyncNetworkState_DataHashFn", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "GetHash", 
                    "signature": "(const ::blink::mojom::BackgroundSyncNetworkState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 54, 
                      "end_line": 57, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "Equal", 
                    "signature": "(const ::blink::mojom::BackgroundSyncNetworkState& left, const ::blink::mojom::BackgroundSyncNetworkState& right)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 58, 
                      "end_line": 60, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "safe_to_compare_to_empty_or_deleted", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 61, 
                      "end_line": 61, 
                      "start_column": 3, 
                      "end_column": 64
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 53, 
                  "end_line": 62, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }, 
              {
                "name_prefix": "", 
                "type": 3, 
                "name": "DefaultHash", 
                "text_range": {
                  "start_line": 65, 
                  "end_line": 67, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": ""
              }, 
              {
                "name": "HashTraits", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000000 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 72, 
                      "end_line": 73, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000001 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 74, 
                      "end_line": 75, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "hasIsEmptyValueFunction", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 76, 
                      "end_line": 76, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsEmptyValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncNetworkState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 77, 
                      "end_line": 79, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "ConstructDeletedValue", 
                    "signature": "(::blink::mojom::BackgroundSyncNetworkState& slot, bool)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 80, 
                      "end_line": 82, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsDeletedValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncNetworkState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 83, 
                      "end_line": 85, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 70, 
                  "end_line": 86, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "WTF", 
            "text_range": {
              "start_line": 52, 
              "end_line": 87, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "blink_mojom_internal_BackgroundSyncError_DataHashFn", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "GetHash", 
                    "signature": "(const ::blink::mojom::BackgroundSyncError& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 92, 
                      "end_line": 95, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "Equal", 
                    "signature": "(const ::blink::mojom::BackgroundSyncError& left, const ::blink::mojom::BackgroundSyncError& right)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 96, 
                      "end_line": 98, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "safe_to_compare_to_empty_or_deleted", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 99, 
                      "end_line": 99, 
                      "start_column": 3, 
                      "end_column": 64
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 91, 
                  "end_line": 100, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }, 
              {
                "name_prefix": "", 
                "type": 3, 
                "name": "DefaultHash", 
                "text_range": {
                  "start_line": 103, 
                  "end_line": 105, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": ""
              }, 
              {
                "name": "HashTraits", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000000 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 110, 
                      "end_line": 111, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000001 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 112, 
                      "end_line": 113, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "hasIsEmptyValueFunction", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 114, 
                      "end_line": 114, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsEmptyValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncError& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 115, 
                      "end_line": 117, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "ConstructDeletedValue", 
                    "signature": "(::blink::mojom::BackgroundSyncError& slot, bool)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 118, 
                      "end_line": 120, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsDeletedValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncError& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 121, 
                      "end_line": 123, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 108, 
                  "end_line": 124, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "WTF", 
            "text_range": {
              "start_line": 90, 
              "end_line": 125, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "blink_mojom_internal_BackgroundSyncState_DataHashFn", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "GetHash", 
                    "signature": "(const ::blink::mojom::BackgroundSyncState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 130, 
                      "end_line": 133, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "Equal", 
                    "signature": "(const ::blink::mojom::BackgroundSyncState& left, const ::blink::mojom::BackgroundSyncState& right)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 134, 
                      "end_line": 136, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "safe_to_compare_to_empty_or_deleted", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 137, 
                      "end_line": 137, 
                      "start_column": 3, 
                      "end_column": 64
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 129, 
                  "end_line": 138, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }, 
              {
                "name_prefix": "", 
                "type": 3, 
                "name": "DefaultHash", 
                "text_range": {
                  "start_line": 141, 
                  "end_line": 143, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": ""
              }, 
              {
                "name": "HashTraits", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000000 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 148, 
                      "end_line": 149, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000001 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 150, 
                      "end_line": 151, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "hasIsEmptyValueFunction", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 152, 
                      "end_line": 152, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsEmptyValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 153, 
                      "end_line": 155, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "ConstructDeletedValue", 
                    "signature": "(::blink::mojom::BackgroundSyncState& slot, bool)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 156, 
                      "end_line": 158, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsDeletedValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncState& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 159, 
                      "end_line": 161, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 146, 
                  "end_line": 162, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "WTF", 
            "text_range": {
              "start_line": 128, 
              "end_line": 163, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "blink_mojom_internal_BackgroundSyncEventLastChance_DataHashFn", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "GetHash", 
                    "signature": "(const ::blink::mojom::BackgroundSyncEventLastChance& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 168, 
                      "end_line": 171, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "Equal", 
                    "signature": "(const ::blink::mojom::BackgroundSyncEventLastChance& left, const ::blink::mojom::BackgroundSyncEventLastChance& right)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 172, 
                      "end_line": 174, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "safe_to_compare_to_empty_or_deleted", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 175, 
                      "end_line": 175, 
                      "start_column": 3, 
                      "end_column": 64
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 167, 
                  "end_line": 176, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }, 
              {
                "name_prefix": "", 
                "type": 3, 
                "name": "DefaultHash", 
                "text_range": {
                  "start_line": 179, 
                  "end_line": 181, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": ""
              }, 
              {
                "name": "HashTraits", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000000 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 186, 
                      "end_line": 187, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "static_assert", 
                    "signature": "(true, \"-1000001 is a reserved enum value\")", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 188, 
                      "end_line": 189, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "hasIsEmptyValueFunction", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 190, 
                      "end_line": 190, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsEmptyValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncEventLastChance& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 191, 
                      "end_line": 193, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "ConstructDeletedValue", 
                    "signature": "(::blink::mojom::BackgroundSyncEventLastChance& slot, bool)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 194, 
                      "end_line": 196, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "IsDeletedValue", 
                    "signature": "(const ::blink::mojom::BackgroundSyncEventLastChance& value)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 197, 
                      "end_line": 199, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 3, 
                "text_range": {
                  "start_line": 184, 
                  "end_line": 200, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "WTF", 
            "text_range": {
              "start_line": 166, 
              "end_line": 201, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "child": [
                  {
                    "child": [
                      {
                        "name": "BackgroundSyncService", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Name_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 242, 
                              "end_line": 242, 
                              "start_column": 3, 
                              "end_column": 29
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Version_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 243, 
                              "end_line": 243, 
                              "start_column": 3, 
                              "end_column": 42
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "PassesAssociatedKinds_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 244, 
                              "end_line": 244, 
                              "start_column": 3, 
                              "end_column": 56
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "HasSyncMethods_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 245, 
                              "end_line": 245, 
                              "start_column": 3, 
                              "end_column": 49
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "~BackgroundSyncService", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 258, 
                              "end_line": 258, 
                              "start_column": 3, 
                              "end_column": 38
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Register", 
                            "signature": "(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 262, 
                              "end_line": 262, 
                              "start_column": 3, 
                              "end_column": 125
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "GetRegistrations", 
                            "signature": "(int64_t service_worker_registration_id, GetRegistrationsCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 266, 
                              "end_line": 266, 
                              "start_column": 3, 
                              "end_column": 112
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 239, 
                          "end_line": 267, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceInterceptorForTesting", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "GetForwardingInterface", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 269, 
                              "end_line": 269, 
                              "start_column": 3, 
                              "end_column": 63
                            }
                          }, 
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "Register", 
                            "signature": "(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 270, 
                              "end_line": 270, 
                              "start_column": 3, 
                              "end_column": 122
                            }
                          }, 
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "GetRegistrations", 
                            "signature": "(int64_t service_worker_registration_id, GetRegistrationsCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 271, 
                              "end_line": 271, 
                              "start_column": 3, 
                              "end_column": 109
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 268, 
                          "end_line": 272, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceAsyncWaiter", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "BackgroundSyncServiceAsyncWaiter", 
                            "signature": "(BackgroundSyncService* proxy)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 275, 
                              "end_line": 275, 
                              "start_column": 3, 
                              "end_column": 75
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "~BackgroundSyncServiceAsyncWaiter", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 276, 
                              "end_line": 276, 
                              "start_column": 3, 
                              "end_column": 39
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Register", 
                            "signature": "(SyncRegistrationPtr options, int64_t service_worker_registration_id, BackgroundSyncError* out_err, SyncRegistrationPtr* out_options)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 277, 
                              "end_line": 278, 
                              "start_column": 3, 
                              "end_column": 140
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "GetRegistrations", 
                            "signature": "(int64_t service_worker_registration_id, BackgroundSyncError* out_err, WTF::Vector<SyncRegistrationPtr>* out_registrations)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 279, 
                              "end_line": 280, 
                              "start_column": 3, 
                              "end_column": 130
                            }
                          }, 
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "proxy_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 283, 
                              "end_line": 283, 
                              "start_column": 3, 
                              "end_column": 39
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 273, 
                          "end_line": 286, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceProxy", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "BackgroundSyncServiceProxy", 
                            "signature": "(mojo::MessageReceiverWithResponder* receiver)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 291, 
                              "end_line": 291, 
                              "start_column": 3, 
                              "end_column": 85
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Register", 
                            "signature": "(SyncRegistrationPtr options, int64_t service_worker_registration_id, RegisterCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 292, 
                              "end_line": 292, 
                              "start_column": 3, 
                              "end_column": 119
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "GetRegistrations", 
                            "signature": "(int64_t service_worker_registration_id, GetRegistrationsCallback callback)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 293, 
                              "end_line": 293, 
                              "start_column": 3, 
                              "end_column": 106
                            }
                          }, 
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "receiver_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 296, 
                              "end_line": 296, 
                              "start_column": 3, 
                              "end_column": 49
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 288, 
                          "end_line": 297, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceStubDispatch", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Accept", 
                            "signature": "(BackgroundSyncService* impl, mojo::Message* message)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 300, 
                              "end_line": 300, 
                              "start_column": 3, 
                              "end_column": 75
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "AcceptWithResponder", 
                            "signature": "(BackgroundSyncService* impl, mojo::Message* message, std::unique_ptr<mojo::MessageReceiverWithStatus> responder)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 301, 
                              "end_line": 304, 
                              "start_column": 3, 
                              "end_column": 67
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 298, 
                          "end_line": 305, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceStub", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "BackgroundSyncServiceStub", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 314, 
                              "end_line": 314, 
                              "start_column": 3, 
                              "end_column": 33
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "~BackgroundSyncServiceStub", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 315, 
                              "end_line": 315, 
                              "start_column": 3, 
                              "end_column": 43
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "set_sink", 
                            "signature": "(ImplPointerType sink)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 317, 
                              "end_line": 317, 
                              "start_column": 3, 
                              "end_column": 67
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "sink", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 318, 
                              "end_line": 318, 
                              "start_column": 3, 
                              "end_column": 44
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Accept", 
                            "signature": "(mojo::Message* message)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 320, 
                              "end_line": 325, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "AcceptWithResponder", 
                            "signature": "(mojo::Message* message, std::unique_ptr<mojo::MessageReceiverWithStatus> responder)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 327, 
                              "end_line": 334, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "private": true
                            }, 
                            "name": "sink_", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 337, 
                              "end_line": 337, 
                              "start_column": 3, 
                              "end_column": 25
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 309, 
                          "end_line": 338, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceRequestValidator", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Accept", 
                            "signature": "(mojo::Message* message)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 341, 
                              "end_line": 341, 
                              "start_column": 3, 
                              "end_column": 48
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 339, 
                          "end_line": 342, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "BackgroundSyncServiceResponseValidator", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Accept", 
                            "signature": "(mojo::Message* message)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 345, 
                              "end_line": 345, 
                              "start_column": 3, 
                              "end_column": 48
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 343, 
                          "end_line": 346, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name": "SyncRegistration", 
                        "signature": "", 
                        "child": [
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "New", 
                            "signature": "(Args&&... args)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 355, 
                              "end_line": 358, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "From", 
                            "signature": "(const U& u)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 361, 
                              "end_line": 363, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "To", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 366, 
                              "end_line": 368, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "SyncRegistration", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 371, 
                              "end_line": 371, 
                              "start_column": 3, 
                              "end_column": 22
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "SyncRegistration", 
                            "signature": "(int64_t id, const WTF::String& tag, BackgroundSyncNetworkState network_state)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 373, 
                              "end_line": 376, 
                              "start_column": 3, 
                              "end_column": 49
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "~SyncRegistration", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 378, 
                              "end_line": 378, 
                              "start_column": 3, 
                              "end_column": 23
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Clone", 
                            "signature": "()", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 384, 
                              "end_line": 384, 
                              "start_column": 3, 
                              "end_column": 37
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Equals", 
                            "signature": "(const T& other)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 392, 
                              "end_line": 392, 
                              "start_column": 3, 
                              "end_column": 37
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "Hash", 
                            "signature": "(size_t seed)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 393, 
                              "end_line": 393, 
                              "start_column": 3, 
                              "end_column": 34
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Serialize", 
                            "signature": "(UserType* input)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 396, 
                              "end_line": 399, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "SerializeAsMessage", 
                            "signature": "(UserType* input)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 402, 
                              "end_line": 405, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "WrapAsMessage", 
                            "signature": "(UserType input)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 412, 
                              "end_line": 416, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Deserialize", 
                            "signature": "(const void* data, size_t data_num_bytes, UserType* output)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 419, 
                              "end_line": 424, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "Deserialize", 
                            "signature": "(const WTF::Vector<uint8_t>& input, UserType* output)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 427, 
                              "end_line": 431, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "public": true
                            }, 
                            "name": "DeserializeFromMessage", 
                            "signature": "(mojo::Message input, UserType* output)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 434, 
                              "end_line": 447, 
                              "start_column": 3, 
                              "end_column": 4
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "id", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 449, 
                              "end_line": 449, 
                              "start_column": 3, 
                              "end_column": 14
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "tag", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 450, 
                              "end_line": 450, 
                              "start_column": 3, 
                              "end_column": 19
                            }
                          }, 
                          {
                            "modifiers": {
                              "public": true
                            }, 
                            "name": "network_state", 
                            "signature": "", 
                            "name_prefix": "", 
                            "type": 9, 
                            "text_range": {
                              "start_line": 451, 
                              "end_line": 451, 
                              "start_column": 3, 
                              "end_column": 44
                            }
                          }, 
                          {
                            "modifiers": {
                              "static": true, 
                              "private": true
                            }, 
                            "name": "Validate", 
                            "signature": "(const void* data, mojo::internal::ValidationContext* validation_context)", 
                            "name_prefix": "", 
                            "type": 8, 
                            "text_range": {
                              "start_line": 454, 
                              "end_line": 455, 
                              "start_column": 3, 
                              "end_column": 79
                            }
                          }
                        ], 
                        "name_prefix": "", 
                        "type": 1, 
                        "text_range": {
                          "start_line": 349, 
                          "end_line": 456, 
                          "start_column": 1, 
                          "end_column": 2
                        }
                      }, 
                      {
                        "name_prefix": "SyncRegistration::", 
                        "type": 8, 
                        "name": "Clone", 
                        "text_range": {
                          "start_line": 462, 
                          "end_line": 468, 
                          "start_column": 1, 
                          "end_column": 2
                        }, 
                        "signature": "()"
                      }, 
                      {
                        "name_prefix": "SyncRegistration::", 
                        "type": 8, 
                        "name": "Equals", 
                        "text_range": {
                          "start_line": 473, 
                          "end_line": 481, 
                          "start_column": 1, 
                          "end_column": 2
                        }, 
                        "signature": "(const T& other_struct)"
                      }
                    ], 
                    "type": 11, 
                    "name": "blink", 
                    "text_range": {
                      "start_line": 206, 
                      "end_line": 484, 
                      "start_column": 1, 
                      "end_column": 2
                    }, 
                    "signature": ""
                  }
                ], 
                "type": 11, 
                "name": "mojom", 
                "text_range": {
                  "start_line": 205, 
                  "end_line": 485, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": ""
              }
            ], 
            "type": 11, 
            "name": "blink", 
            "text_range": {
              "start_line": 204, 
              "end_line": 486, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name_prefix": "", 
                "type": 8, 
                "name": "StructTraits", 
                "text_range": {
                  "start_line": 492, 
                  "end_line": 513, 
                  "start_column": 1, 
                  "end_column": 2
                }, 
                "signature": "(const ::blink::mojom::blink::SyncRegistrationPtr& input)"
              }
            ], 
            "type": 11, 
            "name": "mojo", 
            "text_range": {
              "start_line": 488, 
              "end_line": 515, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }
        ]
      }, 
      "return_code": 1
    }
  ]
}