{"file_info_response":[{"return_code":1,"file_info":{"name":"src/base/memory/free_deleter.h","lines":"25","size":"683","language":"c++","type":1,"md5":"b641fc8233e755d8c581f124a783f388","changelist_num":"5fc67636bc053f254c152913b85d845fcae1d525","mime_type":"text/plain","generated":false,"package_name":"chromium","content":{"text":"// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#ifndef BASE_MEMORY_FREE_DELETER_H_\n#define BASE_MEMORY_FREE_DELETER_H_\n\n#include \u003cstdlib.h\u003e\n\nnamespace base {\n\n// Function object which invokes 'free' on its parameter, which must be\n// a pointer. Can be used to store malloc-allocated pointers in std::unique_ptr:\n//\n// std::unique_ptr\u003cint, base::FreeDeleter\u003e foo_ptr(\n//     static_cast\u003cint*\u003e(malloc(sizeof(int))));\nstruct FreeDeleter {\n  inline void operator()(void* ptr) const {\n    free(ptr);\n  }\n};\n\n}  // namespace base\n\n#endif  // BASE_MEMORY_FREE_DELETER_H_\n"},"gob_info":{"repo":"chromium/chromium/src","commit":"5fc67636bc053f254c152913b85d845fcae1d525","path":"base/memory/free_deleter.h"}}}],"elapsed_ms":76}